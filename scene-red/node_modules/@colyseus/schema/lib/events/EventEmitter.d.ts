/**
 * Extracted from https://www.npmjs.com/package/strong-events
 */
declare type ExtractFunctionParameters<T extends (...args: any[]) => any> = T extends (...args: infer P) => any ? P : never;
export declare class EventEmitter_<CallbackSignature extends (...args: any[]) => any> {
    handlers: Array<CallbackSignature>;
    register(cb: CallbackSignature, once?: boolean): this;
    invoke(...args: ExtractFunctionParameters<CallbackSignature>): void;
    invokeAsync(...args: ExtractFunctionParameters<CallbackSignature>): Promise<any[]>;
    remove(cb: CallbackSignature): void;
    clear(): void;
}
export {};
