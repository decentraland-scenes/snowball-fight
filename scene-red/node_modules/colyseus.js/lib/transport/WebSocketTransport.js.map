{"version":3,"file":"WebSocketTransport.js","sourceRoot":"","sources":["../../src/transport/WebSocketTransport.ts"],"names":[],"mappings":";;;;;;AAAA,4CAA+B;AAG/B,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,IAAI,YAAa,CAAC;AAExD,MAAa,kBAAkB;IAI3B,YAAmB,MAA0B;QAA1B,WAAM,GAAN,MAAM,CAAoB;IAAG,CAAC;IAE1C,IAAI,CAAC,IAAiC;QACzC,IAAI,IAAI,YAAY,WAAW,EAAE;YAC7B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAEtB;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;SAC/C;IACL,CAAC;IAEM,OAAO,CAAC,GAAW;QACtB,IAAI,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACpC,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IAC1C,CAAC;IAEM,KAAK,CAAC,IAAa,EAAE,MAAe;QACvC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;CAEJ;AA5BD,gDA4BC","sourcesContent":["import NodeWebSocket from \"ws\";\nimport { ITransport, ITransportEventMap } from \"./ITransport\";\n\nconst WebSocket = globalThis.WebSocket || NodeWebSocket;\n\nexport class WebSocketTransport implements ITransport {\n    ws: WebSocket | NodeWebSocket;\n    protocols?: string | string[];\n\n    constructor(public events: ITransportEventMap) {}\n\n    public send(data: ArrayBuffer | Array<number>): void {\n        if (data instanceof ArrayBuffer) {\n            this.ws.send(data);\n\n        } else if (Array.isArray(data)) {\n            this.ws.send((new Uint8Array(data)).buffer);\n        }\n    }\n\n    public connect(url: string) {\n        this.ws = new WebSocket(url, this.protocols);\n        this.ws.binaryType = 'arraybuffer';\n        this.ws.onopen = this.events.onopen;\n        this.ws.onmessage = this.events.onmessage;\n        this.ws.onclose = this.events.onclose;\n        this.ws.onerror = this.events.onerror;\n    }\n\n    public close(code?: number, reason?: string) {\n        this.ws.close(code, reason);\n    }\n\n}"]}