{"version":3,"file":"Storage.js","sourceRoot":"","sources":["../src/Storage.ts"],"names":[],"mappings":";AAAA,sDAAsD;;;AAEtD;;;;GAIG;AAEH,IAAI,OAAY,CAAC;AAEjB,SAAS,UAAU;IACf,IAAI,CAAC,OAAO,EAAG;QACX,OAAO,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,WAAW,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC;YACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAE,mCAAmC;YAC1D,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,WAAW,IAAI,MAAM,CAAC,YAAY,CAAC,2EAA2E;gBAChI,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,8BAA8B;gBACpD,CAAC,CAAC;oBACE,KAAK,EAAE,EAAE;oBACT,OAAO,EAAE,UAAS,GAAG,EAAE,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;oBAC1D,OAAO,EAAE,UAAS,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC3C,UAAU,EAAE,UAAS,GAAG,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACxD,CAAC;KAEb;IACD,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,SAAgB,OAAO,CAAC,GAAW,EAAE,KAAa;IAC9C,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACrC,CAAC;AAFD,0BAEC;AAED,SAAgB,UAAU,CAAC,GAAW;IAClC,UAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACjC,CAAC;AAFD,gCAEC;AAED,SAAgB,OAAO,CAAC,GAAW,EAAE,QAAkB;IACnD,MAAM,KAAK,GAAQ,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAE7C,IACI,OAAO,CAAC,OAAO,CAAC,KAAK,WAAW,IAAI,eAAe;QACnD,CAAC,CAAC,KAAK,YAAY,OAAO,CAAC,EAC7B;QACE,iCAAiC;QACjC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAEnB;SAAM;QACH,+BAA+B;QAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;KACpC;AACL,CAAC;AAdD,0BAcC","sourcesContent":["/// <reference path=\"../typings/cocos-creator.d.ts\" />\n\n/**\n * We do not assign 'storage' to window.localStorage immediatelly for React\n * Native compatibility. window.localStorage is not present when this module is\n * loaded.\n */\n\nlet storage: any;\n\nfunction getStorage(): Storage {\n    if (!storage)  {\n        storage = (typeof (cc) !== 'undefined' && cc.sys && cc.sys.localStorage)\n            ? cc.sys.localStorage  // compatibility with cocos creator\n            : typeof (window) !== \"undefined\" && window.localStorage //RN does have window object at this point, but localStorage is not defined\n                ? window.localStorage // regular browser environment\n                : { // mock localStorage for Node.js or RN environment\n                    cache: {},\n                    setItem: function(key, value) { this.cache[key] = value; },\n                    getItem: function(key) { this.cache[key]; },\n                    removeItem: function(key) { delete this.cache[key]; },\n                };\n\n    }\n    return storage;\n}\n\nexport function setItem(key: string, value: string) {\n    getStorage().setItem(key, value);\n}\n\nexport function removeItem(key: string) {\n    getStorage().removeItem(key);\n}\n\nexport function getItem(key: string, callback: Function) {\n    const value: any = getStorage().getItem(key);\n\n    if (\n        typeof (Promise) === 'undefined' || // old browsers\n        !(value instanceof Promise)\n    ) {\n        // browser has synchronous return\n        callback(value);\n\n    } else {\n        // react-native is asynchronous\n        value.then((id) => callback(id));\n    }\n}\n"]}