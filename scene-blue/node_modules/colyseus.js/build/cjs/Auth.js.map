{"version":3,"file":"Auth.js","sources":["../../src/Auth.ts"],"sourcesContent":["import * as http from \"httpie\";\nimport { getItem, setItem, removeItem } from \"./Storage\";\n\nconst TOKEN_STORAGE = \"colyseus-auth-token\";\n\nexport enum Platform {\n    ios = \"ios\",\n    android = \"android\",\n}\n\nexport interface Device {\n    id: string,\n    platform: Platform\n}\n\nexport interface IStatus {\n    status: boolean;\n}\n\nexport interface IUser {\n    _id: string;\n    username: string;\n    displayName: string;\n    avatarUrl: string;\n\n    isAnonymous: boolean;\n    email: string;\n\n    lang: string;\n    location: string;\n    timezone: string;\n    metadata: any;\n\n    devices: Device[];\n\n    facebookId: string;\n    twitterId: string;\n    googleId: string;\n    gameCenterId: string;\n    steamId: string;\n\n    friendIds: string[];\n    blockedUserIds: string[];\n\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nexport class Auth implements IUser {\n    _id: string = undefined;\n    username: string = undefined;\n    displayName: string = undefined;\n    avatarUrl: string = undefined;\n\n    isAnonymous: boolean = undefined;\n    email: string = undefined;\n\n    lang: string = undefined;\n    location: string = undefined;\n    timezone: string = undefined;\n    metadata: any = undefined;\n\n    devices: Device[] = undefined;\n\n    facebookId: string = undefined;\n    twitterId: string = undefined;\n    googleId: string = undefined;\n    gameCenterId: string = undefined;\n    steamId: string = undefined;\n\n    friendIds: string[] = undefined;\n    blockedUserIds: string[] = undefined;\n\n    createdAt: Date = undefined;\n    updatedAt: Date = undefined;\n\n    // auth token\n    token: string = undefined;\n\n    protected endpoint: string;\n    protected keepOnlineInterval: any;\n\n    constructor(endpoint: string) {\n        this.endpoint = endpoint.replace(\"ws\", \"http\");\n        getItem(TOKEN_STORAGE, (token) => this.token = token);\n    }\n\n    get hasToken() {\n        return !!this.token;\n    }\n\n    async login (options: {\n        accessToken?: string,\n        deviceId?: string,\n        platform?: string,\n        email?: string,\n        password?: string,\n    } = {}) {\n        const queryParams: any = Object.assign({}, options);\n\n        if (this.hasToken) {\n            queryParams.token = this.token;\n        }\n\n        const data = await this.request('post', '/auth', queryParams);\n\n        // set & cache token\n        this.token = data.token;\n        setItem(TOKEN_STORAGE, this.token);\n\n        for (let attr in data) {\n            if (this.hasOwnProperty(attr)) { this[attr] = data[attr]; }\n        }\n\n        this.registerPingService();\n\n        return this;\n    }\n\n    async save() {\n        await this.request('put', '/auth', {}, {\n            username: this.username,\n            displayName: this.displayName,\n            avatarUrl: this.avatarUrl,\n            lang: this.lang,\n            location: this.location,\n            timezone: this.timezone,\n        });\n\n        return this;\n    }\n\n    async getFriends() {\n        return (await this.request('get', '/friends/all')) as IUser[];\n    }\n\n    async getOnlineFriends() {\n        return (await this.request('get', '/friends/online')) as IUser[];\n    }\n\n    async getFriendRequests() {\n        return (await this.request('get', '/friends/requests')) as IUser[];\n    }\n\n    async sendFriendRequest(friendId: string) {\n        return (await this.request('post', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async acceptFriendRequest(friendId: string) {\n        return (await this.request('put', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async declineFriendRequest(friendId: string) {\n        return (await this.request('del', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async blockUser(friendId: string) {\n        return (await this.request('post', '/friends/block', { userId: friendId })) as IStatus;\n    }\n\n    async unblockUser(friendId: string) {\n        return (await this.request('put', '/friends/block', { userId: friendId })) as IStatus;\n    }\n\n    async request(\n        method: 'get' | 'post' | 'put' | 'del',\n        segments: string,\n        query: {[key: string]: number | string} = {},\n        body?: any,\n        headers: {[key: string]: string} = {}\n    ) {\n        headers['Accept'] = 'application/json';\n        if (this.hasToken) { headers['Authorization'] = 'Bearer ' + this.token; }\n\n        const queryParams: string[] = [];\n        for (const name in query) {\n            queryParams.push(`${name}=${query[name]}`);\n        }\n\n        const queryString = (queryParams.length > 0)\n            ? `?${queryParams.join(\"&\")}`\n            : '';\n\n        const opts: Partial<http.Options> = { headers };\n        if (body) { opts.body = body; }\n\n        return (await http[method](`${this.endpoint}${segments}${queryString}`, opts)).data;\n    }\n\n    logout() {\n        this.token = undefined;\n        removeItem(TOKEN_STORAGE);\n        this.unregisterPingService();\n    }\n\n    registerPingService(timeout: number = 15000) {\n        this.unregisterPingService();\n\n        this.keepOnlineInterval = setInterval(() => this.request('get', '/auth'), timeout);\n    }\n\n    unregisterPingService() {\n        clearInterval(this.keepOnlineInterval);\n    }\n\n}\n"],"names":["Platform","getItem","setItem","http","removeItem"],"mappings":"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"}