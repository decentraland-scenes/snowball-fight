{"version":3,"file":"Auth.js","sourceRoot":"","sources":["../src/Auth.ts"],"names":[],"mappings":"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","sourcesContent":["import * as http from \"httpie\";\nimport { getItem, setItem, removeItem } from \"./Storage\";\n\nconst TOKEN_STORAGE = \"colyseus-auth-token\";\n\nexport enum Platform {\n    ios = \"ios\",\n    android = \"android\",\n}\n\nexport interface Device {\n    id: string,\n    platform: Platform\n}\n\nexport interface IStatus {\n    status: boolean;\n}\n\nexport interface IUser {\n    _id: string;\n    username: string;\n    displayName: string;\n    avatarUrl: string;\n\n    isAnonymous: boolean;\n    email: string;\n\n    lang: string;\n    location: string;\n    timezone: string;\n    metadata: any;\n\n    devices: Device[];\n\n    facebookId: string;\n    twitterId: string;\n    googleId: string;\n    gameCenterId: string;\n    steamId: string;\n\n    friendIds: string[];\n    blockedUserIds: string[];\n\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nexport class Auth implements IUser {\n    _id: string = undefined;\n    username: string = undefined;\n    displayName: string = undefined;\n    avatarUrl: string = undefined;\n\n    isAnonymous: boolean = undefined;\n    email: string = undefined;\n\n    lang: string = undefined;\n    location: string = undefined;\n    timezone: string = undefined;\n    metadata: any = undefined;\n\n    devices: Device[] = undefined;\n\n    facebookId: string = undefined;\n    twitterId: string = undefined;\n    googleId: string = undefined;\n    gameCenterId: string = undefined;\n    steamId: string = undefined;\n\n    friendIds: string[] = undefined;\n    blockedUserIds: string[] = undefined;\n\n    createdAt: Date = undefined;\n    updatedAt: Date = undefined;\n\n    // auth token\n    token: string = undefined;\n\n    protected endpoint: string;\n    protected keepOnlineInterval: any;\n\n    constructor(endpoint: string) {\n        this.endpoint = endpoint.replace(\"ws\", \"http\");\n        getItem(TOKEN_STORAGE, (token) => this.token = token);\n    }\n\n    get hasToken() {\n        return !!this.token;\n    }\n\n    async login (options: {\n        accessToken?: string,\n        deviceId?: string,\n        platform?: string,\n        email?: string,\n        password?: string,\n    } = {}) {\n        const queryParams: any = Object.assign({}, options);\n\n        if (this.hasToken) {\n            queryParams.token = this.token;\n        }\n\n        const data = await this.request('post', '/auth', queryParams);\n\n        // set & cache token\n        this.token = data.token;\n        setItem(TOKEN_STORAGE, this.token);\n\n        for (let attr in data) {\n            if (this.hasOwnProperty(attr)) { this[attr] = data[attr]; }\n        }\n\n        this.registerPingService();\n\n        return this;\n    }\n\n    async save() {\n        await this.request('put', '/auth', {}, {\n            username: this.username,\n            displayName: this.displayName,\n            avatarUrl: this.avatarUrl,\n            lang: this.lang,\n            location: this.location,\n            timezone: this.timezone,\n        });\n\n        return this;\n    }\n\n    async getFriends() {\n        return (await this.request('get', '/friends/all')) as IUser[];\n    }\n\n    async getOnlineFriends() {\n        return (await this.request('get', '/friends/online')) as IUser[];\n    }\n\n    async getFriendRequests() {\n        return (await this.request('get', '/friends/requests')) as IUser[];\n    }\n\n    async sendFriendRequest(friendId: string) {\n        return (await this.request('post', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async acceptFriendRequest(friendId: string) {\n        return (await this.request('put', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async declineFriendRequest(friendId: string) {\n        return (await this.request('del', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async blockUser(friendId: string) {\n        return (await this.request('post', '/friends/block', { userId: friendId })) as IStatus;\n    }\n\n    async unblockUser(friendId: string) {\n        return (await this.request('put', '/friends/block', { userId: friendId })) as IStatus;\n    }\n\n    async request(\n        method: 'get' | 'post' | 'put' | 'del',\n        segments: string,\n        query: {[key: string]: number | string} = {},\n        body?: any,\n        headers: {[key: string]: string} = {}\n    ) {\n        headers['Accept'] = 'application/json';\n        if (this.hasToken) { headers['Authorization'] = 'Bearer ' + this.token; }\n\n        const queryParams: string[] = [];\n        for (const name in query) {\n            queryParams.push(`${name}=${query[name]}`);\n        }\n\n        const queryString = (queryParams.length > 0)\n            ? `?${queryParams.join(\"&\")}`\n            : '';\n\n        const opts: Partial<http.Options> = { headers };\n        if (body) { opts.body = body; }\n\n        return (await http[method](`${this.endpoint}${segments}${queryString}`, opts)).data;\n    }\n\n    logout() {\n        this.token = undefined;\n        removeItem(TOKEN_STORAGE);\n        this.unregisterPingService();\n    }\n\n    registerPingService(timeout: number = 15000) {\n        this.unregisterPingService();\n\n        this.keepOnlineInterval = setInterval(() => this.request('get', '/auth'), timeout);\n    }\n\n    unregisterPingService() {\n        clearInterval(this.keepOnlineInterval);\n    }\n\n}\n"]}