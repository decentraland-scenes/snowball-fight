{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA8C;AAArC,gGAAA,MAAM,OAAA;AAEf,+CAA0D;AACjD,0FADA,qBAAS,OACA;AAElB,mDAAiE;AACxD,4FADA,yBAAW,OACA;AAEpB,6DAA4D;AACnD,iGADA,mCAAgB,OACA;AAEzB,+CAA8C;AACrC,0FADA,qBAAS,OACA;AAElB,iCAAuC;AAC9B,6FADA,oBAAY,OACA;AAErB,IAAA,oBAAY,EAAC,KAAK,EAAE,EAAE,WAAW,EAAE,qBAAS,EAAE,QAAQ,EAAE,uBAAW,EAAE,CAAC,CAAC;AACvE,IAAA,oBAAY,EAAC,OAAO,EAAE,EAAE,WAAW,EAAE,yBAAW,EAAE,QAAQ,EAAE,2BAAa,EAAE,CAAC,CAAC;AAC7E,IAAA,oBAAY,EAAC,KAAK,EAAE,EAAE,WAAW,EAAE,qBAAS,EAAE,CAAC,CAAC;AAChD,IAAA,oBAAY,EAAC,YAAY,EAAE,EAAE,WAAW,EAAE,mCAAgB,GAAG,CAAC,CAAC;AAE/D,QAAQ;AACR,iCAAsC;AAA7B,oGAAA,WAAW,OAAA;AAIpB,0CAA4C;AAEnC,wBAAM;AADf,0CAA4C;AAC3B,wBAAM;AAEvB,aAAa;AACb,2CAIsB;AAHlB,wGAAA,UAAU,OAAA;AACV,4GAAA,cAAc,OAAA;AACd,6GAAA,eAAe,OAAA;AAGnB,6CAkBuB;AAjBnB,cAAc;AACd,mGAAA,IAAI,OAAA;AACJ,yGAAA,UAAU,OAAA;AACV,qGAAA,MAAM,OAAA;AACN,6GAAA,cAAc,OAAA;AACd,0GAAA,WAAW,OAAA;AACX,wGAAA,SAAS,OAAA;AAET,YAAY;AACZ,+GAAA,gBAAgB,OAAA;AAEhB,QAAQ;AACR,sGAAA,OAAO,OAAA;AAOX,+BAAmC;AAA1B,iGAAA,SAAS,OAAA","sourcesContent":["export { Schema, DataChange } from \"./Schema\";\n\nimport { MapSchema, getMapProxy } from \"./types/MapSchema\"\nexport { MapSchema };\n\nimport { ArraySchema, getArrayProxy } from \"./types/ArraySchema\";\nexport { ArraySchema };\n\nimport { CollectionSchema } from \"./types/CollectionSchema\";\nexport { CollectionSchema };\n\nimport { SetSchema } from \"./types/SetSchema\";\nexport { SetSchema };\n\nimport { registerType } from \"./types\";\nexport { registerType };\n\nregisterType(\"map\", { constructor: MapSchema, getProxy: getMapProxy });\nregisterType(\"array\", { constructor: ArraySchema, getProxy: getArrayProxy });\nregisterType(\"set\", { constructor: SetSchema });\nregisterType(\"collection\", { constructor: CollectionSchema, });\n\n// Utils\nexport { dumpChanges } from \"./utils\";\n\n// Encoder / Decoder\nexport { Iterator } from \"./encoding/decode\";\nimport * as encode from \"./encoding/encode\";\nimport * as decode from \"./encoding/decode\";\nexport { encode, decode };\n\n// Reflection\nexport {\n    Reflection,\n    ReflectionType,\n    ReflectionField,\n} from \"./Reflection\";\n\nexport {\n    // Annotations\n    type,\n    deprecated,\n    filter,\n    filterChildren,\n    defineTypes,\n    hasFilter,\n\n    // Internals\n    SchemaDefinition,\n\n    // Types\n    Context,\n    PrimitiveType,\n    Definition,\n    DefinitionType,\n    FilterCallback,\n} from \"./annotations\";\n\nexport { OPERATION } from \"./spec\";"]}