{"version":3,"file":"HelperTypes.js","sourceRoot":"","sources":["../../src/types/HelperTypes.ts"],"names":[],"mappings":"","sourcesContent":["type Bool = 'true' | 'false'\ntype Key = string | number | symbol;\n\ntype Not<X extends Bool> = {\n    true: 'false',\n    false: 'true'\n}[X]\n\ntype HaveIntersection<S1 extends string, S2 extends string> = (\n    { [K in S1]: 'true' } &\n    { [key: string]: 'false' }\n)[S2]\n\ntype IsNeverWorker<S extends Key> = (\n    { [K in S]: 'false' } &\n    { [key: string]: 'true' }\n)[S]\n\n// Worker needed because of https://github.com/Microsoft/TypeScript/issues/18118\ntype IsNever<T extends Key> = Not<HaveIntersection<IsNeverWorker<T>, 'false'>>\n\ntype IsFunction<T> = IsNever<keyof T>\n\nexport type NonFunctionProps<T> = {\n    [K in keyof T]: {\n        'false': K,\n        'true': never\n    }[IsFunction<T[K]>]\n}[keyof T];\n\nexport type NonFunctionPropNames<T> = {\n    [K in keyof T]: T[K] extends Function ? never : K\n}[keyof T];\n\n"]}